{
  "hash": "cb701c941ac4d752f67978c8efe3f2c8",
  "result": {
    "markdown": "---\ntitle: \"Adventures in mediation analysis with weighted GLMs\"\nsubtitle: \"Race and Social Support as predictors of Intimate Partner Violence victimization in women in the Future of Families dataset\"\ndate: \"2023\"\ncategories: [statistics, mediation, survey, glm]\ndraft: true\nformat:\n  html:\n    code-fold: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\nlibrary(mediation)\nlibrary(survey)\nlibrary(srvyr)\n\n# directory for the post\npost_folder <- \"wip_mediation-weighted-glm\"\n```\n:::\n\n\nThis blogpost documents the challenges we faced when attempting to run a mediation analysis using the `mediation` package with a binomial mediator and outcome while incorporating sampling weights into the analysis with the help of the `survey` package.\n\nAs part of a research program seeking to better understand intimate partner violence (IPV) through an intersectional lens, we wanted to use the [Future of Families & Child Wellbeing Study](https://ffcws.princeton.edu/)[^1] dataset to run a mediation analysis. The data come from a survey with a complex design, and baseline and replicate weights are provided for each participant in the \"national\" sample. These weights should allow us to make estimates nationally representative. (TO DO! point to the document where people can learn more about the weights <https://ffcws.princeton.edu/sites/g/files/toruqf4356/files/ff_const_wgts.pdf>) Our mediator and outcome variables could reasonably be construed as \"binomial outcomes\", and this was our preferred approach to fitting the necessary models. However, we encountered several difficulties XXX\n\n[^1]: Previously called the \"Fragile Families and Child Wellbeing Study\"\n\nThis post has the following structure: First, we introduce the data we'll use for the demonstrations and exemplify how we would like to have run the models (TO DO: rephrase or simply change depending on final structure).\n\n# Data and desired models\n\nFor demonstrative purposes we created a synthetic dataset using the `synthpop` package. This dataset mirrors the characteristics of our data without it being possible to identify any real individuals from it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get synthetic dataset\ndat <- readRDS(here::here(\"posts\", post_folder, \"data_reduced_synth.RDS\"))\n```\n:::\n\n\nWe have three variables that will be used for mediation, `race` (\"White\" or \"Black\"), `informal_support` (an integer from 0 to 3), and `IPV` (an integer from 0 to 24). Each person also has a baseline weight, `m1natwt`, and 33 replicate weights, `m1natwt_rep1` and so on. Behold:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   race informal_support IPV   m1natwt m1natwt_rep1 m1natwt_rep2 m1natwt_rep3\n1 Black                3  18  41.13614     37.85516     41.24734     42.44724\n2 Black                3   4  19.97570     22.96839     20.49259     20.21818\n3 Black                3   0  12.24003     12.68406     11.59396     12.10748\n4 Black                3   0 121.76894    129.03618    131.50407    124.49722\n5 White                3  11  85.96230     87.22457     83.79171     91.27752\n6 Black                3   2  98.04827    101.53748      0.00000     99.79310\n  m1natwt_rep4 m1natwt_rep5 m1natwt_rep6 m1natwt_rep7 m1natwt_rep8 m1natwt_rep9\n1     44.39487     43.73881     44.45506     40.57142     40.78370     41.43095\n2     21.76786     20.79500     20.41886     21.54646     19.36423     19.80069\n3     12.00069     13.18730     11.88648     12.80008      0.00000     12.55978\n4    125.08351    115.39091    124.86470      0.00000    131.66747    121.04597\n5     80.11185     88.11595     88.67043     90.75494     91.45559     85.68980\n6     97.24787    102.89133    105.71425    105.91802    102.19711    100.52937\n  m1natwt_rep10 m1natwt_rep11 m1natwt_rep12 m1natwt_rep13 m1natwt_rep14\n1      34.34425      44.46661       0.00000       0.00000      37.94593\n2      19.47093      19.58197      20.42065      19.78305      20.23575\n3      11.89597      12.56892      12.57526      12.47836      11.46254\n4     126.42019     125.73327     120.78219     132.49487     114.30053\n5      86.45096      92.47426      81.41688      99.84825      79.96129\n6     103.41740      95.16078      97.53283      98.28993     103.28411\n  m1natwt_rep15 m1natwt_rep16 m1natwt_rep17 m1natwt_rep18 m1natwt_rep19\n1      41.50523      43.69954      41.31135      39.22795      42.50257\n2      21.36903      20.48008      20.91415      20.30889      21.36875\n3      12.59188      12.65551      11.98436      12.49196      12.09257\n4     127.66466     124.08061     125.39723     130.57684     134.18793\n5      85.80882      87.77487      89.85811      84.30115      95.09169\n6     105.16373     102.85249      97.12798     107.91775     102.52666\n  m1natwt_rep20 m1natwt_rep21 m1natwt_rep22 m1natwt_rep23 m1natwt_rep24\n1      42.02170      46.58911      41.82341      45.53830      42.27204\n2      19.87386      21.06265      20.41880      23.67257      20.81135\n3      13.70510      13.18920      12.23701      12.59980      12.74326\n4     122.83195       0.00000     124.68690     119.24700     128.60410\n5      89.03872      90.58102      90.92682     102.89832      93.30130\n6     107.20479     100.78193      95.96693      97.10217     101.69630\n  m1natwt_rep25 m1natwt_rep26 m1natwt_rep27 m1natwt_rep28 m1natwt_rep29\n1      42.28968      43.25393      40.67841       0.00000      42.64928\n2      21.42606      21.32215      19.58435      20.62730      21.86095\n3      13.78494      12.39277      13.22096      11.71815      13.12761\n4     128.66008     124.02149     126.49405     123.43700     141.58299\n5      94.10433      86.57666      88.45363      82.06447      89.72732\n6      99.66428     101.72647      96.58415      95.98499     100.43622\n  m1natwt_rep30 m1natwt_rep31 m1natwt_rep32 m1natwt_rep33\n1      42.28931      42.82657      43.13633      44.10038\n2      20.91533      20.08396      20.84812      20.38860\n3      12.33747      11.22335      12.79405      13.22079\n4     135.33669     126.14429     131.47270     125.73920\n5      97.44034      91.89236      94.17548       0.00000\n6       0.00000     105.47424      96.22710      95.11009\n```\n:::\n:::\n\n\nWe'll need to run two models --- the first predicting the mediator, the second predicting the outcome --- and feed these models into `mediation::mediate()`.\n\n## Creating the weighted dataframe\n\nWe fit the models using `survey::svyglm` in order to be able to take the weights into account. First, we need to tell `survey` that our data is weighted, which we do with the help of the `srvyr` package. Our first attempt looked like this:\n\n``` r\ndat_weights <- dat |> \n  srvyr::as_survey_rep(\n    repweights = dplyr::contains(\"_rep\"),\n    weights = m1natwt,\n    combined_weights = TRUE\n  )\n```\n\nHowever, coming across this [CrossValidated question](https://stats.stackexchange.com/questions/409463/duplicating-stata-survey-design-using-svrepdesign-from-survey-package-in-r) and confirming with the Fragile Families guide to using the weights showed us that the code above fails to tell `survey` that we want to use jackknife variance estimation. From the [guide (PDF)](https://fragilefamilies.princeton.edu/sites/fragilefamilies/files/using_the_fragile_families_weights_waves_1_6.pdf), p. 2:\n\n> As described in the weights construction memo, the replicate weights require using jackknife estimation of standard errors.\n\nWoop.\n\nSo, to properly apply the weights, we run this code block:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_weights <- dat |> \n  srvyr::as_survey_rep(\n    repweights = dplyr::contains(\"_rep\"),\n    weights = m1natwt,\n    combined_weights = TRUE,\n    type = \"JKn\",\n    scales = 1,\n    rscales = 1,\n    mse = TRUE\n)\n```\n:::\n\n\n## Running the weighted models and mediation\n\nWith the weighted dataframe in hand, we can use `survey::svyglm` to fit our GLMs predicting `informal_support` and `IPV`.\n\nOur informal support variable is the sum of three items for which each mother could get a 1 or a 0 (indicating that she did or did not have access to that form of support). As such, it seems sensible to model it as a binomial outcome --- each mother has a certain number of \"successes\" out of three possible trials.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m <- survey::svyglm(\n  formula = cbind(informal_support, 3 - informal_support) ~ race,\n  design = dat_weights,\n  family = \"binomial\"\n)\n\nsummary(model_m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsurvey::svyglm(formula = cbind(informal_support, 3 - informal_support) ~ \n    race, design = dat_weights, family = \"binomial\")\n\nSurvey design:\nCalled via srvyr\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   3.6891     0.2778   13.28 2.48e-14 ***\nraceBlack    -1.7317     0.3972   -4.36 0.000133 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 3897.896)\n\nNumber of Fisher Scoring iterations: 6\n```\n:::\n:::\n\n\nWe get the following warning many times:\n\n```         \nWarning: non-integer #successes in a binomial glm!\n```\n\nThis is `survey`'s way of asking us to specify the family as \"quasibinomial\" instead of \"binomial\", since our outcome is a proportion (weighted by the number of trials) and not binary. However, if we do that, `mediation` will not work with our models.\n\nOur IPV variable is the sum of twelve items for which each mother could get a score of 0, 1, or 2 (indicating how often she experienced a given form of violence from her partner). As such, it also seems sensible to model it as a binomial outcome --- each mother has a certain number of \"successes\" out of 24 possible \"trials\".[^2]\n\n[^2]: Another option, which we won't go into, would be to take the responses to the items themselves and use a multi-level ordinal model with item as the random grouping factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_y <- survey::svyglm(\n  formula = cbind(IPV, 24 - IPV) ~ race + informal_support,\n  design = dat_weights,\n  family = \"binomial\"\n)\n\nsummary(model_y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsurvey::svyglm(formula = cbind(IPV, 24 - IPV) ~ race + informal_support, \n    design = dat_weights, family = \"binomial\")\n\nSurvey design:\nCalled via srvyr\n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      -1.49683    0.29495  -5.075 1.89e-05 ***\nraceBlack         0.12070    0.16796   0.719  0.47794    \ninformal_support -0.24940    0.08928  -2.794  0.00899 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 6994.641)\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n:::\n\n\n(Here again we suppressed the warning that would have otherwise popped up.)\n\nFinally, our mediation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmed_out <- mediation::mediate(\n  model.m = model_m,\n  model.y = model_y,\n  sims = 1000,\n  treat = \"race\",\n  mediator = \"informal_support\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nweights taken as sampling weights, not total number of trials\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in mediation::mediate(model.m = model_m, model.y = model_y, sims =\n1000, : treatment and control values do not match factor levels; using White and\nBlack as control and treatment, respectively\n```\n:::\n\n```{.r .cell-code}\nsummary(med_out)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCausal Mediation Analysis \n\nQuasi-Bayesian Confidence Intervals\n\n                          Estimate 95% CI Lower 95% CI Upper p-value   \nACME (control)            0.003893     0.000349         0.01   0.004 **\nACME (treated)            0.004129     0.000425         0.01   0.004 **\nADE (control)             0.015631    -0.031644         0.06   0.454   \nADE (treated)             0.015867    -0.032804         0.06   0.454   \nTotal Effect              0.019760    -0.026668         0.06   0.346   \nProp. Mediated (control)  0.094405    -1.042873         1.98   0.350   \nProp. Mediated (treated)  0.108976    -1.009035         1.97   0.350   \nACME (average)            0.004011     0.000382         0.01   0.004 **\nADE (average)             0.015749    -0.032133         0.06   0.454   \nProp. Mediated (average)  0.101690    -1.026043         1.98   0.350   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 1955 \n\n\nSimulations: 1000 \n```\n:::\n:::\n\n\nA small but statistically significant mediation effect! The warning about weights not being taken as total number of trials makes me nervous, but then again, we did give the models sampling weights, so maybe it's ok?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}