{
  "hash": "e04032ac772ed165a7ba08dae9d46290",
  "result": {
    "markdown": "---\ntitle: \"Adventures in mediation analysis with weighted GLMs (temporary title)\"\nsubtitle: \"subtitle TBD\"\nauthor: Vasco Braz√£o, Priya Devendran\ndate: \"2023\"\ncategories: [statistics, mediation, survey, glm]\ndraft: true\nexecute: \n  warning: false\nformat:\n  html:\n    code-fold: show\n---\n\n\nThis blogpost documents the challenges we faced when attempting to run a mediation analysis using the `mediation` package with a binomial mediator and outcome while incorporating sampling weights into the analysis with the help of the `survey` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the packages we will use\nlibrary(tidyverse)\nlibrary(here)\nlibrary(mediation)\nlibrary(survey)\nlibrary(srvyr)\nlibrary(gt)\nlibrary(MASS)\n\n\n# directory for the post (to change once post goes live)\npost_folder <- \"wip_mediation-weighted-glm\"\n\n# number of simulations for mediation analysis\nn_sims <- 1000\n```\n:::\n\n\nAs part of a research program seeking to better understand intimate partner violence (IPV) through an intersectional lens, we wanted to use the [Future of Families & Child Wellbeing Study](https://ffcws.princeton.edu/)[^1] dataset to run a mediation analysis. The data come from a survey with a complex design, and baseline and replicate weights are provided for each participant in the \"national\" sample. These weights should allow us to make estimates nationally representative. (TO DO! point to the document where people can learn more about the weights <https://ffcws.princeton.edu/sites/g/files/toruqf4356/files/ff_const_wgts.pdf>) Our mediator and outcome variables could reasonably be construed as binomial outcomes, and this was our preferred approach to fitting the necessary models. However, we encountered several difficulties XXX\n\n[^1]: Previously called the \"Fragile Families and Child Wellbeing Study\"\n\nThis post has the following structure: First, we introduce the data we'll use for the demonstrations and exemplify how we would like to have run the models (TO DO: rephrase or simply change depending on final structure).\n\n# Background\n\nFor demonstrative purposes we created a synthetic dataset using the `synthpop` package. This dataset mirrors the characteristics of our data without it being possible to identify any real individuals from it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get synthetic dataset\ndat <- readRDS(here::here(\"posts\", post_folder, \"data_reduced_synth.RDS\")) |> \n  # create other variables we will need\n  dplyr::mutate(\n    informal_support_prop = informal_support/3,\n    informal_support_max = 3,\n    informal_support_binary = ifelse(informal_support == 3, 1, 0),\n    informal_support_ordinal = forcats::as_factor(informal_support) |> \n      forcats::fct_relevel(\"0\", \"1\", \"2\", \"3\"),\n    IPV_prop = IPV/24,\n    IPV_max = 25,\n    IPV_binary = ifelse(IPV > 0, 1, 0)\n  )\n```\n:::\n\n\nWe have three variables that will be used for mediation, `race` (\"White\" or \"Black\"), `informal_support` (an integer from 0 to 3), and `IPV` (an integer from 0 to 24). We manually create `_prop` and `_max` variables for informal support and IPV, so that we can use the proportion as an outcome in our GLMs and use the `weights` argument to specify the number of trials. We also create `informal_support_binary`, which classifies women as having high access to informal support (takes the value 1) when they score 3 out of 3, and low access (takes the value 0) when they score less than 3, as well as `IPV_binary`, which classifies women as having experienced some form of IPV (takes the value 1) if they score more than 0 and as not having experienced IPV (takes the value 0) if they score exactly 0. These binarized variables will become useful later on. Finally, we create the ordered factor `informal_support_ordinal`, to be used in ordinal models later on.\n\nEach person also has a baseline weight, `m1natwt`, and 33 replicate weights, `m1natwt_rep1` and so on. Behold:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dat) |> \n  gt::gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"wkcauldmag\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#wkcauldmag .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#wkcauldmag .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#wkcauldmag .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#wkcauldmag .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#wkcauldmag .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#wkcauldmag .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#wkcauldmag .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#wkcauldmag .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#wkcauldmag .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#wkcauldmag .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#wkcauldmag .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#wkcauldmag .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#wkcauldmag .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#wkcauldmag .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wkcauldmag .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#wkcauldmag .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#wkcauldmag .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wkcauldmag .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#wkcauldmag .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wkcauldmag .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#wkcauldmag .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wkcauldmag .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wkcauldmag .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wkcauldmag .gt_left {\n  text-align: left;\n}\n\n#wkcauldmag .gt_center {\n  text-align: center;\n}\n\n#wkcauldmag .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#wkcauldmag .gt_font_normal {\n  font-weight: normal;\n}\n\n#wkcauldmag .gt_font_bold {\n  font-weight: bold;\n}\n\n#wkcauldmag .gt_font_italic {\n  font-style: italic;\n}\n\n#wkcauldmag .gt_super {\n  font-size: 65%;\n}\n\n#wkcauldmag .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#wkcauldmag .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#wkcauldmag .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#wkcauldmag .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#wkcauldmag .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#wkcauldmag .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#wkcauldmag .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"race\">race</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"informal_support\">informal_support</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"IPV\">IPV</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt\">m1natwt</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep1\">m1natwt_rep1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep2\">m1natwt_rep2</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep3\">m1natwt_rep3</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep4\">m1natwt_rep4</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep5\">m1natwt_rep5</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep6\">m1natwt_rep6</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep7\">m1natwt_rep7</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep8\">m1natwt_rep8</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep9\">m1natwt_rep9</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep10\">m1natwt_rep10</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep11\">m1natwt_rep11</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep12\">m1natwt_rep12</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep13\">m1natwt_rep13</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep14\">m1natwt_rep14</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep15\">m1natwt_rep15</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep16\">m1natwt_rep16</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep17\">m1natwt_rep17</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep18\">m1natwt_rep18</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep19\">m1natwt_rep19</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep20\">m1natwt_rep20</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep21\">m1natwt_rep21</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep22\">m1natwt_rep22</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep23\">m1natwt_rep23</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep24\">m1natwt_rep24</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep25\">m1natwt_rep25</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep26\">m1natwt_rep26</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep27\">m1natwt_rep27</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep28\">m1natwt_rep28</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep29\">m1natwt_rep29</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep30\">m1natwt_rep30</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep31\">m1natwt_rep31</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep32\">m1natwt_rep32</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m1natwt_rep33\">m1natwt_rep33</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"informal_support_prop\">informal_support_prop</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"informal_support_max\">informal_support_max</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"informal_support_binary\">informal_support_binary</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"informal_support_ordinal\">informal_support_ordinal</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"IPV_prop\">IPV_prop</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"IPV_max\">IPV_max</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"IPV_binary\">IPV_binary</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"race\" class=\"gt_row gt_center\">Black</td>\n<td headers=\"informal_support\" class=\"gt_row gt_right\">3</td>\n<td headers=\"IPV\" class=\"gt_row gt_right\">18</td>\n<td headers=\"m1natwt\" class=\"gt_row gt_right\">41.13614</td>\n<td headers=\"m1natwt_rep1\" class=\"gt_row gt_right\">37.85516</td>\n<td headers=\"m1natwt_rep2\" class=\"gt_row gt_right\">41.24734</td>\n<td headers=\"m1natwt_rep3\" class=\"gt_row gt_right\">42.44724</td>\n<td headers=\"m1natwt_rep4\" class=\"gt_row gt_right\">44.39487</td>\n<td headers=\"m1natwt_rep5\" class=\"gt_row gt_right\">43.73881</td>\n<td headers=\"m1natwt_rep6\" class=\"gt_row gt_right\">44.45506</td>\n<td headers=\"m1natwt_rep7\" class=\"gt_row gt_right\">40.57142</td>\n<td headers=\"m1natwt_rep8\" class=\"gt_row gt_right\">40.78370</td>\n<td headers=\"m1natwt_rep9\" class=\"gt_row gt_right\">41.43095</td>\n<td headers=\"m1natwt_rep10\" class=\"gt_row gt_right\">34.34425</td>\n<td headers=\"m1natwt_rep11\" class=\"gt_row gt_right\">44.46661</td>\n<td headers=\"m1natwt_rep12\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep13\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep14\" class=\"gt_row gt_right\">37.94593</td>\n<td headers=\"m1natwt_rep15\" class=\"gt_row gt_right\">41.50523</td>\n<td headers=\"m1natwt_rep16\" class=\"gt_row gt_right\">43.69954</td>\n<td headers=\"m1natwt_rep17\" class=\"gt_row gt_right\">41.31135</td>\n<td headers=\"m1natwt_rep18\" class=\"gt_row gt_right\">39.22795</td>\n<td headers=\"m1natwt_rep19\" class=\"gt_row gt_right\">42.50257</td>\n<td headers=\"m1natwt_rep20\" class=\"gt_row gt_right\">42.02170</td>\n<td headers=\"m1natwt_rep21\" class=\"gt_row gt_right\">46.58911</td>\n<td headers=\"m1natwt_rep22\" class=\"gt_row gt_right\">41.82341</td>\n<td headers=\"m1natwt_rep23\" class=\"gt_row gt_right\">45.53830</td>\n<td headers=\"m1natwt_rep24\" class=\"gt_row gt_right\">42.27204</td>\n<td headers=\"m1natwt_rep25\" class=\"gt_row gt_right\">42.28968</td>\n<td headers=\"m1natwt_rep26\" class=\"gt_row gt_right\">43.25393</td>\n<td headers=\"m1natwt_rep27\" class=\"gt_row gt_right\">40.67841</td>\n<td headers=\"m1natwt_rep28\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep29\" class=\"gt_row gt_right\">42.64928</td>\n<td headers=\"m1natwt_rep30\" class=\"gt_row gt_right\">42.28931</td>\n<td headers=\"m1natwt_rep31\" class=\"gt_row gt_right\">42.82657</td>\n<td headers=\"m1natwt_rep32\" class=\"gt_row gt_right\">43.13633</td>\n<td headers=\"m1natwt_rep33\" class=\"gt_row gt_right\">44.10038</td>\n<td headers=\"informal_support_prop\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_max\" class=\"gt_row gt_right\">3</td>\n<td headers=\"informal_support_binary\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_ordinal\" class=\"gt_row gt_center\">3</td>\n<td headers=\"IPV_prop\" class=\"gt_row gt_right\">0.75000000</td>\n<td headers=\"IPV_max\" class=\"gt_row gt_right\">25</td>\n<td headers=\"IPV_binary\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"race\" class=\"gt_row gt_center\">Black</td>\n<td headers=\"informal_support\" class=\"gt_row gt_right\">3</td>\n<td headers=\"IPV\" class=\"gt_row gt_right\">4</td>\n<td headers=\"m1natwt\" class=\"gt_row gt_right\">19.97570</td>\n<td headers=\"m1natwt_rep1\" class=\"gt_row gt_right\">22.96839</td>\n<td headers=\"m1natwt_rep2\" class=\"gt_row gt_right\">20.49259</td>\n<td headers=\"m1natwt_rep3\" class=\"gt_row gt_right\">20.21818</td>\n<td headers=\"m1natwt_rep4\" class=\"gt_row gt_right\">21.76786</td>\n<td headers=\"m1natwt_rep5\" class=\"gt_row gt_right\">20.79500</td>\n<td headers=\"m1natwt_rep6\" class=\"gt_row gt_right\">20.41886</td>\n<td headers=\"m1natwt_rep7\" class=\"gt_row gt_right\">21.54646</td>\n<td headers=\"m1natwt_rep8\" class=\"gt_row gt_right\">19.36423</td>\n<td headers=\"m1natwt_rep9\" class=\"gt_row gt_right\">19.80069</td>\n<td headers=\"m1natwt_rep10\" class=\"gt_row gt_right\">19.47093</td>\n<td headers=\"m1natwt_rep11\" class=\"gt_row gt_right\">19.58197</td>\n<td headers=\"m1natwt_rep12\" class=\"gt_row gt_right\">20.42065</td>\n<td headers=\"m1natwt_rep13\" class=\"gt_row gt_right\">19.78305</td>\n<td headers=\"m1natwt_rep14\" class=\"gt_row gt_right\">20.23575</td>\n<td headers=\"m1natwt_rep15\" class=\"gt_row gt_right\">21.36903</td>\n<td headers=\"m1natwt_rep16\" class=\"gt_row gt_right\">20.48008</td>\n<td headers=\"m1natwt_rep17\" class=\"gt_row gt_right\">20.91415</td>\n<td headers=\"m1natwt_rep18\" class=\"gt_row gt_right\">20.30889</td>\n<td headers=\"m1natwt_rep19\" class=\"gt_row gt_right\">21.36875</td>\n<td headers=\"m1natwt_rep20\" class=\"gt_row gt_right\">19.87386</td>\n<td headers=\"m1natwt_rep21\" class=\"gt_row gt_right\">21.06265</td>\n<td headers=\"m1natwt_rep22\" class=\"gt_row gt_right\">20.41880</td>\n<td headers=\"m1natwt_rep23\" class=\"gt_row gt_right\">23.67257</td>\n<td headers=\"m1natwt_rep24\" class=\"gt_row gt_right\">20.81135</td>\n<td headers=\"m1natwt_rep25\" class=\"gt_row gt_right\">21.42606</td>\n<td headers=\"m1natwt_rep26\" class=\"gt_row gt_right\">21.32215</td>\n<td headers=\"m1natwt_rep27\" class=\"gt_row gt_right\">19.58435</td>\n<td headers=\"m1natwt_rep28\" class=\"gt_row gt_right\">20.62730</td>\n<td headers=\"m1natwt_rep29\" class=\"gt_row gt_right\">21.86095</td>\n<td headers=\"m1natwt_rep30\" class=\"gt_row gt_right\">20.91533</td>\n<td headers=\"m1natwt_rep31\" class=\"gt_row gt_right\">20.08396</td>\n<td headers=\"m1natwt_rep32\" class=\"gt_row gt_right\">20.84812</td>\n<td headers=\"m1natwt_rep33\" class=\"gt_row gt_right\">20.38860</td>\n<td headers=\"informal_support_prop\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_max\" class=\"gt_row gt_right\">3</td>\n<td headers=\"informal_support_binary\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_ordinal\" class=\"gt_row gt_center\">3</td>\n<td headers=\"IPV_prop\" class=\"gt_row gt_right\">0.16666667</td>\n<td headers=\"IPV_max\" class=\"gt_row gt_right\">25</td>\n<td headers=\"IPV_binary\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"race\" class=\"gt_row gt_center\">Black</td>\n<td headers=\"informal_support\" class=\"gt_row gt_right\">3</td>\n<td headers=\"IPV\" class=\"gt_row gt_right\">0</td>\n<td headers=\"m1natwt\" class=\"gt_row gt_right\">12.24003</td>\n<td headers=\"m1natwt_rep1\" class=\"gt_row gt_right\">12.68406</td>\n<td headers=\"m1natwt_rep2\" class=\"gt_row gt_right\">11.59396</td>\n<td headers=\"m1natwt_rep3\" class=\"gt_row gt_right\">12.10748</td>\n<td headers=\"m1natwt_rep4\" class=\"gt_row gt_right\">12.00069</td>\n<td headers=\"m1natwt_rep5\" class=\"gt_row gt_right\">13.18730</td>\n<td headers=\"m1natwt_rep6\" class=\"gt_row gt_right\">11.88648</td>\n<td headers=\"m1natwt_rep7\" class=\"gt_row gt_right\">12.80008</td>\n<td headers=\"m1natwt_rep8\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep9\" class=\"gt_row gt_right\">12.55978</td>\n<td headers=\"m1natwt_rep10\" class=\"gt_row gt_right\">11.89597</td>\n<td headers=\"m1natwt_rep11\" class=\"gt_row gt_right\">12.56892</td>\n<td headers=\"m1natwt_rep12\" class=\"gt_row gt_right\">12.57526</td>\n<td headers=\"m1natwt_rep13\" class=\"gt_row gt_right\">12.47836</td>\n<td headers=\"m1natwt_rep14\" class=\"gt_row gt_right\">11.46254</td>\n<td headers=\"m1natwt_rep15\" class=\"gt_row gt_right\">12.59188</td>\n<td headers=\"m1natwt_rep16\" class=\"gt_row gt_right\">12.65551</td>\n<td headers=\"m1natwt_rep17\" class=\"gt_row gt_right\">11.98436</td>\n<td headers=\"m1natwt_rep18\" class=\"gt_row gt_right\">12.49196</td>\n<td headers=\"m1natwt_rep19\" class=\"gt_row gt_right\">12.09257</td>\n<td headers=\"m1natwt_rep20\" class=\"gt_row gt_right\">13.70510</td>\n<td headers=\"m1natwt_rep21\" class=\"gt_row gt_right\">13.18920</td>\n<td headers=\"m1natwt_rep22\" class=\"gt_row gt_right\">12.23701</td>\n<td headers=\"m1natwt_rep23\" class=\"gt_row gt_right\">12.59980</td>\n<td headers=\"m1natwt_rep24\" class=\"gt_row gt_right\">12.74326</td>\n<td headers=\"m1natwt_rep25\" class=\"gt_row gt_right\">13.78494</td>\n<td headers=\"m1natwt_rep26\" class=\"gt_row gt_right\">12.39277</td>\n<td headers=\"m1natwt_rep27\" class=\"gt_row gt_right\">13.22096</td>\n<td headers=\"m1natwt_rep28\" class=\"gt_row gt_right\">11.71815</td>\n<td headers=\"m1natwt_rep29\" class=\"gt_row gt_right\">13.12761</td>\n<td headers=\"m1natwt_rep30\" class=\"gt_row gt_right\">12.33747</td>\n<td headers=\"m1natwt_rep31\" class=\"gt_row gt_right\">11.22335</td>\n<td headers=\"m1natwt_rep32\" class=\"gt_row gt_right\">12.79405</td>\n<td headers=\"m1natwt_rep33\" class=\"gt_row gt_right\">13.22079</td>\n<td headers=\"informal_support_prop\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_max\" class=\"gt_row gt_right\">3</td>\n<td headers=\"informal_support_binary\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_ordinal\" class=\"gt_row gt_center\">3</td>\n<td headers=\"IPV_prop\" class=\"gt_row gt_right\">0.00000000</td>\n<td headers=\"IPV_max\" class=\"gt_row gt_right\">25</td>\n<td headers=\"IPV_binary\" class=\"gt_row gt_right\">0</td></tr>\n    <tr><td headers=\"race\" class=\"gt_row gt_center\">Black</td>\n<td headers=\"informal_support\" class=\"gt_row gt_right\">3</td>\n<td headers=\"IPV\" class=\"gt_row gt_right\">0</td>\n<td headers=\"m1natwt\" class=\"gt_row gt_right\">121.76894</td>\n<td headers=\"m1natwt_rep1\" class=\"gt_row gt_right\">129.03618</td>\n<td headers=\"m1natwt_rep2\" class=\"gt_row gt_right\">131.50407</td>\n<td headers=\"m1natwt_rep3\" class=\"gt_row gt_right\">124.49722</td>\n<td headers=\"m1natwt_rep4\" class=\"gt_row gt_right\">125.08351</td>\n<td headers=\"m1natwt_rep5\" class=\"gt_row gt_right\">115.39091</td>\n<td headers=\"m1natwt_rep6\" class=\"gt_row gt_right\">124.86470</td>\n<td headers=\"m1natwt_rep7\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep8\" class=\"gt_row gt_right\">131.66747</td>\n<td headers=\"m1natwt_rep9\" class=\"gt_row gt_right\">121.04597</td>\n<td headers=\"m1natwt_rep10\" class=\"gt_row gt_right\">126.42019</td>\n<td headers=\"m1natwt_rep11\" class=\"gt_row gt_right\">125.73327</td>\n<td headers=\"m1natwt_rep12\" class=\"gt_row gt_right\">120.78219</td>\n<td headers=\"m1natwt_rep13\" class=\"gt_row gt_right\">132.49487</td>\n<td headers=\"m1natwt_rep14\" class=\"gt_row gt_right\">114.30053</td>\n<td headers=\"m1natwt_rep15\" class=\"gt_row gt_right\">127.66466</td>\n<td headers=\"m1natwt_rep16\" class=\"gt_row gt_right\">124.08061</td>\n<td headers=\"m1natwt_rep17\" class=\"gt_row gt_right\">125.39723</td>\n<td headers=\"m1natwt_rep18\" class=\"gt_row gt_right\">130.57684</td>\n<td headers=\"m1natwt_rep19\" class=\"gt_row gt_right\">134.18793</td>\n<td headers=\"m1natwt_rep20\" class=\"gt_row gt_right\">122.83195</td>\n<td headers=\"m1natwt_rep21\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep22\" class=\"gt_row gt_right\">124.68690</td>\n<td headers=\"m1natwt_rep23\" class=\"gt_row gt_right\">119.24700</td>\n<td headers=\"m1natwt_rep24\" class=\"gt_row gt_right\">128.60410</td>\n<td headers=\"m1natwt_rep25\" class=\"gt_row gt_right\">128.66008</td>\n<td headers=\"m1natwt_rep26\" class=\"gt_row gt_right\">124.02149</td>\n<td headers=\"m1natwt_rep27\" class=\"gt_row gt_right\">126.49405</td>\n<td headers=\"m1natwt_rep28\" class=\"gt_row gt_right\">123.43700</td>\n<td headers=\"m1natwt_rep29\" class=\"gt_row gt_right\">141.58299</td>\n<td headers=\"m1natwt_rep30\" class=\"gt_row gt_right\">135.33669</td>\n<td headers=\"m1natwt_rep31\" class=\"gt_row gt_right\">126.14429</td>\n<td headers=\"m1natwt_rep32\" class=\"gt_row gt_right\">131.47270</td>\n<td headers=\"m1natwt_rep33\" class=\"gt_row gt_right\">125.73920</td>\n<td headers=\"informal_support_prop\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_max\" class=\"gt_row gt_right\">3</td>\n<td headers=\"informal_support_binary\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_ordinal\" class=\"gt_row gt_center\">3</td>\n<td headers=\"IPV_prop\" class=\"gt_row gt_right\">0.00000000</td>\n<td headers=\"IPV_max\" class=\"gt_row gt_right\">25</td>\n<td headers=\"IPV_binary\" class=\"gt_row gt_right\">0</td></tr>\n    <tr><td headers=\"race\" class=\"gt_row gt_center\">White</td>\n<td headers=\"informal_support\" class=\"gt_row gt_right\">3</td>\n<td headers=\"IPV\" class=\"gt_row gt_right\">11</td>\n<td headers=\"m1natwt\" class=\"gt_row gt_right\">85.96230</td>\n<td headers=\"m1natwt_rep1\" class=\"gt_row gt_right\">87.22457</td>\n<td headers=\"m1natwt_rep2\" class=\"gt_row gt_right\">83.79171</td>\n<td headers=\"m1natwt_rep3\" class=\"gt_row gt_right\">91.27752</td>\n<td headers=\"m1natwt_rep4\" class=\"gt_row gt_right\">80.11185</td>\n<td headers=\"m1natwt_rep5\" class=\"gt_row gt_right\">88.11595</td>\n<td headers=\"m1natwt_rep6\" class=\"gt_row gt_right\">88.67043</td>\n<td headers=\"m1natwt_rep7\" class=\"gt_row gt_right\">90.75494</td>\n<td headers=\"m1natwt_rep8\" class=\"gt_row gt_right\">91.45559</td>\n<td headers=\"m1natwt_rep9\" class=\"gt_row gt_right\">85.68980</td>\n<td headers=\"m1natwt_rep10\" class=\"gt_row gt_right\">86.45096</td>\n<td headers=\"m1natwt_rep11\" class=\"gt_row gt_right\">92.47426</td>\n<td headers=\"m1natwt_rep12\" class=\"gt_row gt_right\">81.41688</td>\n<td headers=\"m1natwt_rep13\" class=\"gt_row gt_right\">99.84825</td>\n<td headers=\"m1natwt_rep14\" class=\"gt_row gt_right\">79.96129</td>\n<td headers=\"m1natwt_rep15\" class=\"gt_row gt_right\">85.80882</td>\n<td headers=\"m1natwt_rep16\" class=\"gt_row gt_right\">87.77487</td>\n<td headers=\"m1natwt_rep17\" class=\"gt_row gt_right\">89.85811</td>\n<td headers=\"m1natwt_rep18\" class=\"gt_row gt_right\">84.30115</td>\n<td headers=\"m1natwt_rep19\" class=\"gt_row gt_right\">95.09169</td>\n<td headers=\"m1natwt_rep20\" class=\"gt_row gt_right\">89.03872</td>\n<td headers=\"m1natwt_rep21\" class=\"gt_row gt_right\">90.58102</td>\n<td headers=\"m1natwt_rep22\" class=\"gt_row gt_right\">90.92682</td>\n<td headers=\"m1natwt_rep23\" class=\"gt_row gt_right\">102.89832</td>\n<td headers=\"m1natwt_rep24\" class=\"gt_row gt_right\">93.30130</td>\n<td headers=\"m1natwt_rep25\" class=\"gt_row gt_right\">94.10433</td>\n<td headers=\"m1natwt_rep26\" class=\"gt_row gt_right\">86.57666</td>\n<td headers=\"m1natwt_rep27\" class=\"gt_row gt_right\">88.45363</td>\n<td headers=\"m1natwt_rep28\" class=\"gt_row gt_right\">82.06447</td>\n<td headers=\"m1natwt_rep29\" class=\"gt_row gt_right\">89.72732</td>\n<td headers=\"m1natwt_rep30\" class=\"gt_row gt_right\">97.44034</td>\n<td headers=\"m1natwt_rep31\" class=\"gt_row gt_right\">91.89236</td>\n<td headers=\"m1natwt_rep32\" class=\"gt_row gt_right\">94.17548</td>\n<td headers=\"m1natwt_rep33\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"informal_support_prop\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_max\" class=\"gt_row gt_right\">3</td>\n<td headers=\"informal_support_binary\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_ordinal\" class=\"gt_row gt_center\">3</td>\n<td headers=\"IPV_prop\" class=\"gt_row gt_right\">0.45833333</td>\n<td headers=\"IPV_max\" class=\"gt_row gt_right\">25</td>\n<td headers=\"IPV_binary\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"race\" class=\"gt_row gt_center\">Black</td>\n<td headers=\"informal_support\" class=\"gt_row gt_right\">3</td>\n<td headers=\"IPV\" class=\"gt_row gt_right\">2</td>\n<td headers=\"m1natwt\" class=\"gt_row gt_right\">98.04827</td>\n<td headers=\"m1natwt_rep1\" class=\"gt_row gt_right\">101.53748</td>\n<td headers=\"m1natwt_rep2\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep3\" class=\"gt_row gt_right\">99.79310</td>\n<td headers=\"m1natwt_rep4\" class=\"gt_row gt_right\">97.24787</td>\n<td headers=\"m1natwt_rep5\" class=\"gt_row gt_right\">102.89133</td>\n<td headers=\"m1natwt_rep6\" class=\"gt_row gt_right\">105.71425</td>\n<td headers=\"m1natwt_rep7\" class=\"gt_row gt_right\">105.91802</td>\n<td headers=\"m1natwt_rep8\" class=\"gt_row gt_right\">102.19711</td>\n<td headers=\"m1natwt_rep9\" class=\"gt_row gt_right\">100.52937</td>\n<td headers=\"m1natwt_rep10\" class=\"gt_row gt_right\">103.41740</td>\n<td headers=\"m1natwt_rep11\" class=\"gt_row gt_right\">95.16078</td>\n<td headers=\"m1natwt_rep12\" class=\"gt_row gt_right\">97.53283</td>\n<td headers=\"m1natwt_rep13\" class=\"gt_row gt_right\">98.28993</td>\n<td headers=\"m1natwt_rep14\" class=\"gt_row gt_right\">103.28411</td>\n<td headers=\"m1natwt_rep15\" class=\"gt_row gt_right\">105.16373</td>\n<td headers=\"m1natwt_rep16\" class=\"gt_row gt_right\">102.85249</td>\n<td headers=\"m1natwt_rep17\" class=\"gt_row gt_right\">97.12798</td>\n<td headers=\"m1natwt_rep18\" class=\"gt_row gt_right\">107.91775</td>\n<td headers=\"m1natwt_rep19\" class=\"gt_row gt_right\">102.52666</td>\n<td headers=\"m1natwt_rep20\" class=\"gt_row gt_right\">107.20479</td>\n<td headers=\"m1natwt_rep21\" class=\"gt_row gt_right\">100.78193</td>\n<td headers=\"m1natwt_rep22\" class=\"gt_row gt_right\">95.96693</td>\n<td headers=\"m1natwt_rep23\" class=\"gt_row gt_right\">97.10217</td>\n<td headers=\"m1natwt_rep24\" class=\"gt_row gt_right\">101.69630</td>\n<td headers=\"m1natwt_rep25\" class=\"gt_row gt_right\">99.66428</td>\n<td headers=\"m1natwt_rep26\" class=\"gt_row gt_right\">101.72647</td>\n<td headers=\"m1natwt_rep27\" class=\"gt_row gt_right\">96.58415</td>\n<td headers=\"m1natwt_rep28\" class=\"gt_row gt_right\">95.98499</td>\n<td headers=\"m1natwt_rep29\" class=\"gt_row gt_right\">100.43622</td>\n<td headers=\"m1natwt_rep30\" class=\"gt_row gt_right\">0.00000</td>\n<td headers=\"m1natwt_rep31\" class=\"gt_row gt_right\">105.47424</td>\n<td headers=\"m1natwt_rep32\" class=\"gt_row gt_right\">96.22710</td>\n<td headers=\"m1natwt_rep33\" class=\"gt_row gt_right\">95.11009</td>\n<td headers=\"informal_support_prop\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_max\" class=\"gt_row gt_right\">3</td>\n<td headers=\"informal_support_binary\" class=\"gt_row gt_right\">1</td>\n<td headers=\"informal_support_ordinal\" class=\"gt_row gt_center\">3</td>\n<td headers=\"IPV_prop\" class=\"gt_row gt_right\">0.08333333</td>\n<td headers=\"IPV_max\" class=\"gt_row gt_right\">25</td>\n<td headers=\"IPV_binary\" class=\"gt_row gt_right\">1</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nWe'll need to run two models --- the first predicting the mediator, the second predicting the outcome --- and feed these models into `mediation::mediate()`.\n\n## Issue 1: Correctly applying the Fragile Families weights\n\nWe fit the models using `survey::svyglm` in order to be able to take the weights into account. First, we need to tell `survey` that our data is weighted, which we do with the help of the `srvyr` package for tidyverse-like convenience. Our first attempt looked like this:\n\n``` r\ndat_weights <- dat |> \n  srvyr::as_survey_rep(\n    repweights = dplyr::contains(\"_rep\"),\n    weights = m1natwt,\n    combined_weights = TRUE\n  )\n```\n\nHowever, coming across this [CrossValidated question](https://stats.stackexchange.com/questions/409463/duplicating-stata-survey-design-using-svrepdesign-from-survey-package-in-r) and confirming with the Fragile Families guide to using the weights showed us that the code above fails to tell `survey` that we want to use jackknife variance estimation. From the [guide (PDF)](https://fragilefamilies.princeton.edu/sites/fragilefamilies/files/using_the_fragile_families_weights_waves_1_6.pdf), p. 2:\n\n> As described in the weights construction memo, the replicate weights require using jackknife estimation of standard errors.\n\nWoops.\n\nSo, to properly apply the weights, we run this code block instead:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_weights <- dat |> \n  srvyr::as_survey_rep(\n    repweights = dplyr::contains(\"_rep\"),\n    weights = m1natwt,\n    combined_weights = TRUE,\n    type = \"JKn\",\n    scales = 1,\n    rscales = 1,\n    mse = TRUE\n)\n```\n:::\n\n\n# Running the weighted models and mediation\n\nWith the weighted dataframe in hand, we can use `survey::svyglm` to fit our GLMs predicting `informal_support` and `IPV`.\n\nOur informal support variable is the sum of three items for which each mother could get a 1 or a 0 (indicating that she did or did not have access to that form of support). As such, it seems sensible to model it as a binomial outcome --- each mother has a certain number of \"successes\" out of three possible trials.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_1 <- survey::svyglm(\n  formula = informal_support_prop ~ race,\n  weights = informal_support_max,\n  design = dat_weights,\n  family = \"binomial\"\n)\n\nsummary(model_m_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsurvey::svyglm(formula = informal_support_prop ~ race, weights = informal_support_max, \n    design = dat_weights, family = \"binomial\")\n\nSurvey design:\nCalled via srvyr\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   3.6891     0.2778   13.28 2.48e-14 ***\nraceBlack    -1.7317     0.3972   -4.36 0.000133 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1299.299)\n\nNumber of Fisher Scoring iterations: 6\n```\n:::\n:::\n\n\nWe get the following warning many times:\n\n```         \nWarning: non-integer #successes in a binomial glm!\n```\n\nThis is `survey`'s way of asking us to specify the family as \"quasibinomial\" instead of \"binomial\", since our outcome is a proportion (weighted by the number of trials) and not binary. However, if we do that, `mediation` will not work with our models.\n\nOur IPV variable is the sum of twelve items for which each mother could get a score of 0, 1, or 2 (indicating how often she experienced a given form of violence from her partner). As such, it also seems sensible to model it as a binomial outcome --- each mother has a certain number of \"successes\" out of 24 possible \"trials\".[^2]\n\n[^2]: Another option, which we won't go into, would be to take the responses to the items themselves and use a multi-level ordinal model with item as the random grouping factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_y_1 <- survey::svyglm(\n  formula = IPV_prop ~ race + informal_support_prop,\n  weights = IPV_max,\n  design = dat_weights,\n  family = \"binomial\"\n)\n\nsummary(model_y_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsurvey::svyglm(formula = IPV_prop ~ race + informal_support_prop, \n    weights = IPV_max, design = dat_weights, family = \"binomial\")\n\nSurvey design:\nCalled via srvyr\n\nCoefficients:\n                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            -1.4968     0.2949  -5.075 1.89e-05 ***\nraceBlack               0.1207     0.1680   0.719  0.47794    \ninformal_support_prop  -0.7482     0.2678  -2.794  0.00899 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 291.4434)\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n:::\n\n\n(Here again we suppressed the warning that would have otherwise popped up.)\n\nFinally, our mediation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmed_1 <- mediation::mediate(\n  model.m = model_m_1,\n  model.y = model_y_1,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_prop\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nweights taken as sampling weights, not total number of trials\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in mediation::mediate(model.m = model_m_1, model.y = model_y_1, :\ntreatment and control values do not match factor levels; using White and Black\nas control and treatment, respectively\n```\n:::\n\n```{.r .cell-code}\nsummary(med_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCausal Mediation Analysis \n\nQuasi-Bayesian Confidence Intervals\n\n                         Estimate 95% CI Lower 95% CI Upper p-value   \nACME (control)            0.00940      0.00130         0.02   0.002 **\nACME (treated)            0.01008      0.00164         0.03   0.002 **\nADE (control)             0.01088     -0.01959         0.04   0.472   \nADE (treated)             0.01156     -0.02089         0.04   0.472   \nTotal Effect              0.02096     -0.01254         0.05   0.194   \nProp. Mediated (control)  0.34562     -3.13835         3.58   0.196   \nProp. Mediated (treated)  0.39336     -2.81335         3.36   0.196   \nACME (average)            0.00974      0.00147         0.03   0.002 **\nADE (average)             0.01122     -0.02024         0.04   0.472   \nProp. Mediated (average)  0.36949     -2.97585         3.50   0.196   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 1955 \n\n\nSimulations: 1000 \n```\n:::\n:::\n\n\nA small but statistically significant mediation effect! The warning about weights not being taken as total number of trials makes us nervous, but then again, we did give the models sampling weights, so maybe it's ok?\n\n## Issue 2: Mediation with \"multiple-trial binomial mediator\" runs for weighted but not for unweighted models?\n\nWe knew that we would eventually perform a sensitivity analysis where all models would be run without using the sampling weights. Running the previous steps with the `glm` command resulted in an issue:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_2 <- glm(\n  formula = informal_support_prop ~ race,\n  weights = informal_support_max,\n  data = dat,\n  family = \"binomial\"\n)\n\nmodel_y_2 <- glm(\n  formula = IPV_prop ~ race + informal_support_prop,\n  weights = IPV_max,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_2 <- mediation::mediate(\n  model.m = model_m_2,\n  model.y = model_y_2,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_prop\"\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mediation::mediate(model.m = model_m_2, model.y = model_y_2, : weights on outcome and mediator models not identical\n```\n:::\n:::\n\n\nIt seems like `mediation::mediate` is taking the weights we pass to the GLM function (which correspond to total number of trials, not to sampling weights) as sampling weights, and complaining when it notices that these weights are not the same for the mediator and outcome models. Vasco perhaps clumsily posted this as an [issue on the mediation package Github](https://github.com/kosukeimai/mediation/issues/59), but at least for now there has been no answer. We can work around this by using an alternative way of specifying the same GLM model --- instead of using a proportion as an outcome and passing the number of trials through the `weights` argument, we can instead use a vector of \"successes\" and \"failures\" (which corresponds to the total number of trials minus the number of successes) as the outcome:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_2.1 <- glm(\n  formula = cbind(informal_support, informal_support_max - informal_support) ~ race,\n  data = dat,\n  family = \"binomial\"\n)\n\nmodel_y_2.1 <- glm(\n  formula = cbind(IPV, IPV_max - IPV) ~ race + informal_support_prop,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_2.1 <- mediation::mediate(\n  model.m = model_m_2.1,\n  model.y = model_y_2.1,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_prop\"\n)\n\nsummary(med_2.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCausal Mediation Analysis \n\nQuasi-Bayesian Confidence Intervals\n\n                         Estimate 95% CI Lower 95% CI Upper p-value    \nACME (control)            0.00298      0.00153         0.00  <2e-16 ***\nACME (treated)            0.00328      0.00167         0.01  <2e-16 ***\nADE (control)             0.01301      0.00781         0.02  <2e-16 ***\nADE (treated)             0.01332      0.00799         0.02  <2e-16 ***\nTotal Effect              0.01629      0.01077         0.02  <2e-16 ***\nProp. Mediated (control)  0.18167      0.09439         0.31  <2e-16 ***\nProp. Mediated (treated)  0.20106      0.10556         0.33  <2e-16 ***\nACME (average)            0.00313      0.00161         0.00  <2e-16 ***\nADE (average)             0.01317      0.00790         0.02  <2e-16 ***\nProp. Mediated (average)  0.19137      0.09987         0.32  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 1955 \n\n\nSimulations: 1000 \n```\n:::\n:::\n\n\nSuccess! But at the cost of suspicion. The [documentation for the `mediate` function](https://www.rdocumentation.org/packages/mediation/versions/4.5.0/topics/mediate) warns us that (emphasis added):\n\n> As of version 4.0, the mediator model can be of either 'lm', 'glm' (or \\`bayesglm'), 'polr' (or \\`bayespolr'), 'gam', 'rq', \\`survreg', or \\`merMod' class, corresponding respectively to the linear regression models, generalized linear models, ordered response models, generalized additive models, quantile regression models, parametric duration models, or multilevel models.. For binary response models, the 'mediator' must be a numeric variable with values 0 or 1 as opposed to a factor. Quasi-likelihood-based inferences are not allowed for the mediator model because the functional form must be exactly specified for the estimation algorithm to work. **The 'binomial' family can only be used for binary response mediators and cannot be used for multiple-trial responses**. This is due to conflicts between how the latter type of models are implemented in [**`glm`**](https://www.rdocumentation.org/link/glm?package=mediation&version=4.5.0) and how 'mediate' is currently written.\n\nThus, until the package author clarifies whether this implementation results in correct estimates, we are cautious about trusting them.\n\n### Sanity check: comparing results with linear probability models\n\nAs a sanity check, to become a little more confident that `mediate` is working as intended even though it's not supposed to work well with a multiple-trial binomial mediator, we compare the results of our model that did run (`med_2.1`) with a mediation run on linear probability models (basically, using `lm()` instead of `glm()` even though the outcomes are proportions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_2.2 <- lm(\n  formula = informal_support_prop ~ race,\n  data = dat\n)\n\nmodel_y_2.2 <- lm(\n  formula = IPV_prop ~ race + informal_support_prop,\n  data = dat\n)\n\nmed_2.2 <- mediation::mediate(\n  model.m = model_m_2.2,\n  model.y = model_y_2.2,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_prop\"\n)\n\nsummary(med_2.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCausal Mediation Analysis \n\nQuasi-Bayesian Confidence Intervals\n\n               Estimate 95% CI Lower 95% CI Upper p-value    \nACME            0.00318      0.00144         0.01  <2e-16 ***\nADE             0.01335      0.00040         0.03   0.044 *  \nTotal Effect    0.01653      0.00400         0.03   0.006 ** \nProp. Mediated  0.18929      0.07482         0.82   0.006 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 1955 \n\n\nSimulations: 1000 \n```\n:::\n:::\n\n\nThe results seem fairly similar, but this provides limited comfort.\n\n### Bonus finding: you can specify a mediator that is not technically the variable that your mediator model predicts\n\nNote that in the models used for `med_2.1` there is a potential discrepancy. The mediator model is formulated as `formula = cbind(informal_support, informal_support_max - informal_support) ~ race`, while the outcome model is formulated as `formula = cbind(IPV, IPV_max - IPV) ~ race + informal_support_prop`. So the outcome model is using `informal_support_prop` (our intended mediator) as a predictor of IPV, but the mediator model uses the variables `informal_support` and `informal_support_max` to internally generate the proportion of successes. In the call to `mediation::mediate` we can then specify `mediator = \"informal_support_prop\"`, and all seems to work as intended. What if we used `informal_support` as predictor in the outcome model instead? We can then specify `mediator = \"informal_support\"` and end up with something like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_2.3 <- glm(\n  formula = cbind(informal_support, informal_support_max - informal_support) ~ race,\n  data = dat,\n  family = \"binomial\"\n)\n\nmodel_y_2.3 <- glm(\n  formula = cbind(IPV, IPV_max - IPV) ~ race + informal_support,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_2.3 <- mediation::mediate(\n  model.m = model_m_2.3,\n  model.y = model_y_2.3,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support\"\n)\n\nsummary(med_2.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCausal Mediation Analysis \n\nQuasi-Bayesian Confidence Intervals\n\n                         Estimate 95% CI Lower 95% CI Upper p-value    \nACME (control)           0.001145     0.000618         0.00  <2e-16 ***\nACME (treated)           0.001255     0.000670         0.00  <2e-16 ***\nADE (control)            0.017318     0.009654         0.02  <2e-16 ***\nADE (treated)            0.017428     0.009738         0.02  <2e-16 ***\nTotal Effect             0.018573     0.011080         0.03  <2e-16 ***\nProp. Mediated (control) 0.060760     0.031654         0.12  <2e-16 ***\nProp. Mediated (treated) 0.066722     0.035463         0.13  <2e-16 ***\nACME (average)           0.001200     0.000643         0.00  <2e-16 ***\nADE (average)            0.017373     0.009696         0.02  <2e-16 ***\nProp. Mediated (average) 0.063741     0.033583         0.13  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 1955 \n\n\nSimulations: 1000 \n```\n:::\n:::\n\n\nLooking at the last three rows (Average Causal Mediated Effect (average), Average Direct Effect (average), and Proportion Mediated (average)), the results seem different than the ones estimated in `med_2.1` (which used `informal_support_prop` as mediator) and `med.2.2` (which used linear proability models). But looking closer, you'll notice that the estimates related to the mediator, namely of the Average Causal Mediated Effect and the Proportion Mediated just seem to be divided by three!\n\nMy assumption about how that came to be: When we use `informal_support_prop`, which can only take values on the $(0, 1)$ interval, the ACME estimates correspond to the change in probability of IPV associated with going from 0 to 1 on the mediator and thus span the full range of the mediator. When we use `informal_support`, which takes values in the set $\\{0, 1, 2, 3\\}$, the estimates also correspond to the increase in probability of IPV associated with an increase of 1 on the mediator (e.g., from 0 to 1), but this is only $\\frac{1}{3}$ of the total possible way. Thus, applying this effect three times would be equivalent to moving from 0 to 3 on the mediator scale, the same as moving from 0 to 1 when the mediator is a proportion.[^3]\n\n[^3]: Of course, the effects mentioned here are not really the effects of moving from X to Y on the mediator, but the mediated effect that changing from Race = \"White\" to Race = \"Black\" has on the probability of IPV *through its effect on the mediator*.\n\n## Issue 3: Using a binary mediator and a binomial outcome --- works with cbind(successes, failures) but not with proportion as outcome and weights argument specified\n\nNext, we attempted to run everything with the same binomial outcome and a binary mediator.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_3 <- glm(\n  formula = informal_support_binary ~ race,\n  data = dat,\n  family = \"binomial\"\n)\n\nmodel_y_3 <- glm(\n  formula = IPV_prop ~ race + informal_support_binary,\n  weights = IPV_max,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_3 <- mediation::mediate(\n  model.m = model_m_3,\n  model.y = model_y_3,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_binary\"\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mediation::mediate(model.m = model_m_3, model.y = model_y_3, : weights on outcome and mediator models not identical\n```\n:::\n:::\n\n\nOnce again we find that `mediate` complains about different weights on mediator and outcome models, even though, according to the documentation, it works with a binary mediator and a binomial outcome. We then try using the vector of successes and failures specification for the outcome model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_y_3.1 <- glm(\n  formula = cbind(IPV, IPV_max - IPV) ~ race + informal_support_binary,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_3.1 <- mediation::mediate(\n  model.m = model_m_3,\n  model.y = model_y_3.1,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_binary\"\n)\n\nsummary(med_3.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCausal Mediation Analysis \n\nQuasi-Bayesian Confidence Intervals\n\n                         Estimate 95% CI Lower 95% CI Upper p-value    \nACME (control)            0.00342      0.00157         0.01  <2e-16 ***\nACME (treated)            0.00376      0.00174         0.01  <2e-16 ***\nADE (control)             0.01234      0.00705         0.02  <2e-16 ***\nADE (treated)             0.01268      0.00720         0.02  <2e-16 ***\nTotal Effect              0.01610      0.01034         0.02  <2e-16 ***\nProp. Mediated (control)  0.21212      0.10930         0.37  <2e-16 ***\nProp. Mediated (treated)  0.23349      0.12086         0.39  <2e-16 ***\nACME (average)            0.00359      0.00165         0.01  <2e-16 ***\nADE (average)             0.01251      0.00713         0.02  <2e-16 ***\nProp. Mediated (average)  0.22281      0.11487         0.38  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 1955 \n\n\nSimulations: 1000 \n```\n:::\n:::\n\n\nThis approach runs, but we are still left wondering whether we can trust the estimates.\n\n## Issue 4: Ordinal mediator and binomial outcome don't work together.\n\nBecause we would prefer not to binarize the social support variable in order to keep all the information that we can, we also explored using an ordinal mediator model. `mediate()` works with ordinal models fit with `MASS::polr`, so we attempted that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_4 <- MASS::polr(\n  formula = informal_support_ordinal ~ race,\n  data = dat,\n  Hess = TRUE\n)\n\nmodel_y_4 <- glm(\n  formula = cbind(IPV, IPV_max - IPV) ~ race + informal_support_ordinal,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_4 <- mediation::mediate(\n  model.m = model_m_4,\n  model.y = model_y_4,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_ordinal\"\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in UseMethod(\"isSymmetric\"): no applicable method for 'isSymmetric' applied to an object of class \"c('double', 'numeric')\"\n```\n:::\n:::\n\n\nThe first issue arises, but it's easy to fix. Again, from the [documentation of the mediate function](https://rdrr.io/cran/mediation/man/mediate.html):\n\n> The quasi-Bayesian approximation (King et al. 2000) cannot be used if 'model.m' is of class 'rq' or 'gam', or if 'model.y' is of class 'gam', 'polr' or 'bayespolr'. In these cases, either an error message is returned or use of the nonparametric bootstrap is forced. Users should note that use of the nonparametric bootstrap often requires significant computing time, especially when 'sims' is set to a large value.\n\nWe can get around this by setting the argument `boot` to `TRUE`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmed_4 <- mediation::mediate(\n  model.m = model_m_4,\n  model.y = model_y_4,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_ordinal\",\n  boot = TRUE\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in cbind(IPV, IPV_max - IPV): object 'IPV' not found\n```\n:::\n:::\n\n\nNow we get a different problem. It seems the `boot` package is having trouble with the way we set up our outcome model --- hopefully using the other implementation will take care of that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_y_4.1 <- glm(\n  formula = IPV_prop ~ race + informal_support_ordinal,\n  weights = IPV_max,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_4 <- mediation::mediate(\n  model.m = model_m_4,\n  model.y = model_y_4.1,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_ordinal\",\n  boot = TRUE\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mediation::mediate(model.m = model_m_4, model.y = model_y_4.1, : weights on outcome and mediator models not identical\n```\n:::\n:::\n\n\nFinally, we reach a dead-end. It seems once again the `mediate` function is taking the prior weights we fed into our `glm` as sample weight and complaining that our ordinal model doesn't have the same sample weights. If we are willing to throw away some information, we can make it all work with a binary outcome, thusly:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_y_4.2 <- glm(\n  formula = IPV_binary ~ race + informal_support_ordinal,\n  data = dat,\n  family = \"binomial\"\n)\n\nmed_4 <- mediation::mediate(\n  model.m = model_m_4,\n  model.y = model_y_4.2,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_ordinal\",\n  boot = TRUE\n)\n\nsummary(med_4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCausal Mediation Analysis \n\nNonparametric Bootstrap Confidence Intervals with the Percentile Method\n\n                          Estimate 95% CI Lower 95% CI Upper p-value  \nACME (control)            0.001466    -0.000482         0.01   0.084 .\nACME (treated)            0.001422    -0.000490         0.01   0.088 .\nADE (control)             0.012595    -0.026208         0.05   0.538  \nADE (treated)             0.012551    -0.025740         0.05   0.538  \nTotal Effect              0.014017    -0.022355         0.06   0.436  \nProp. Mediated (control)  0.104567    -1.654967         1.80   0.484  \nProp. Mediated (treated)  0.101433    -1.686065         1.81   0.488  \nACME (average)            0.001444    -0.000486         0.01   0.086 .\nADE (average)             0.012573    -0.025974         0.05   0.538  \nProp. Mediated (average)  0.103000    -1.670516         1.80   0.486  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 1955 \n\n\nSimulations: 1000 \n```\n:::\n:::\n\n\nThis runs, although the bootstrap adds significantly to computing time and we had to binarize IPV to achieve it.\n\n## Issue 5: Reconciling svyglm() and svypolr() models\n\nWith this partial success, we checked to see if we could also run this latest mediation on the weighted data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_5 <- survey::svyolr(\n  formula = informal_support_ordinal ~ race,\n  design = dat_weights\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in optim(s0, fmin, gmin, method = \"BFGS\", ...): initial value in 'vmmin' is not finite\n```\n:::\n:::\n\n\nThis throws an error, which [this StackOverflow post](https://stackoverflow.com/questions/28916377/r-error-with-polr-initial-value-in-vmmin-is-not-finite?rq=2) can help us solve. We can help the function by providing plausible start values for the coefficients and the intercepts/thresholds. We have one coefficient and three thresholds (from 0 to 1, from 1 to 2, and from 2 to 3), and we know they should be relatively close to zero as well as that the thresholds should be in ascending order. With the syntax `start = c(coefficients, thresholds)` we can make it work:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_m_5 <- survey::svyolr(\n  formula = informal_support_ordinal ~ race,\n  design = dat_weights,\n  start = c(0, -1, 0, 1)\n)\n\nsummary(model_m_5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\nsvyolr(formula = informal_support_ordinal ~ race, design = dat_weights, \n    start = c(0, -1, 0, 1))\n\nCoefficients:\n             Value Std. Error  t value\nraceBlack -1.62481  0.3874065 -4.19407\n\nIntercepts:\n    Value    Std. Error t value \n0|1  -4.5463   0.3580   -12.6979\n1|2  -3.7384   0.2741   -13.6376\n2|3  -3.0236   0.2458   -12.3027\n```\n:::\n:::\n\n\nOk, moving on.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_y_5 <- survey::svyglm(\n  formula = IPV_binary ~ race + informal_support_ordinal,\n  design = dat_weights,\n  family = \"binomial\"\n)\n\nmed_5 <- mediation::mediate(\n  model.m = model_m_5,\n  model.y = model_y_5,\n  sims = n_sims,\n  treat = \"race\",\n  mediator = \"informal_support_ordinal\",\n  boot = TRUE\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mediation::mediate(model.m = model_m_5, model.y = model_y_5, : weights on outcome and mediator models not identical\n```\n:::\n:::\n\n\nNot this again üò≠. (TO BE CONTINUED)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}